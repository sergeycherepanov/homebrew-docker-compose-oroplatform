# Dockerfile for project-specific certificates
# This Dockerfile extends the base PHP image with custom certificates from .crt directory

ARG BASE_IMAGE
FROM ${BASE_IMAGE}

# Switch to root to install certificates
USER root

# Ensure ca-certificates is installed
RUN apk add --no-cache ca-certificates

# Copy certificates from project's .crt directory to temporary location
# Use a wildcard that won't fail if no files exist
COPY .crt/ /tmp/project-certs/

# Install certificates and convert PEM to CRT if needed
RUN set -eux; \
    if [ -d "/tmp/project-certs" ] && [ "$(ls -A /tmp/project-certs 2>/dev/null | wc -l)" -gt 0 ]; then \
        echo "Installing project certificates..."; \
        mkdir -p /usr/local/share/ca-certificates; \
        cert_count=0; \
        for cert_file in /tmp/project-certs/*; do \
            if [ -f "$cert_file" ]; then \
                cert_name=$(basename "$cert_file"); \
                cert_ext="${cert_name##*.}"; \
                cert_base="${cert_name%.*}"; \
                \
                case "$cert_ext" in \
                    pem|PEM) \
                        cp "$cert_file" "/usr/local/share/ca-certificates/${cert_base}.crt"; \
                        echo "✓ Installed PEM certificate: $cert_name -> ${cert_base}.crt"; \
                        cert_count=$((cert_count + 1)); \
                        ;; \
                    crt|CRT) \
                        cp "$cert_file" "/usr/local/share/ca-certificates/$cert_name"; \
                        echo "✓ Installed CRT certificate: $cert_name"; \
                        cert_count=$((cert_count + 1)); \
                        ;; \
                    *) \
                        echo "⚠ Skipping unsupported certificate format: $cert_name"; \
                        ;; \
                esac; \
            fi; \
        done; \
        \
        if [ "$cert_count" -gt 0 ]; then \
            echo "Updating certificate store..."; \
            update-ca-certificates; \
            echo "=== Installed $cert_count project certificate(s) ==="; \
            ls -la /usr/local/share/ca-certificates/ 2>/dev/null || true; \
            echo "=================================================="; \
        else \
            echo "No valid certificate files found in .crt directory"; \
        fi; \
    else \
        echo "No .crt directory or no files found - continuing without custom certificates"; \
    fi; \
    \
    # Clean up temporary files
    rm -rf /tmp/project-certs

# Switch back to the application user
ARG PHP_USER_NAME=developer
USER ${PHP_USER_NAME}
